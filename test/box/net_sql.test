# encoding: tarantool

# postgresql
exec admin "lua dump = function(t) return box.cjson.encode(t) end"
exec admin "lua c = box.net.sql.connect('pg', 'localhost', 5432, 'tarantool', 'tarantool', 'tarantool')"
exec admin "lua dump({c:execute('SELECT 123::text AS bla, 345')})"
exec admin "lua dump({c:execute('SELECT -1 AS neg, NULL AS abc')})"
exec admin "lua dump({c:execute('SELECT -1.1 AS neg, 1.2 AS pos')})"
exec admin "lua dump({c:execute('SELECT ARRAY[1,2] AS neg, 1.2 AS pos')})"
exec admin "lua dump({c:execute('SELECT ? AS val', 'abc')})"
exec admin "lua dump({c:execute('SELECT ? AS val', 123)})"
exec admin "lua dump({c:execute('SELECT ? AS val', true)})"
exec admin "lua dump({c:execute('SELECT ? AS val', false)})"
exec admin "lua dump({c:execute('SELECT ? AS val, ? AS num, ? AS str', false, 123, 'abc')})"
exec admin "lua dump({c:execute('DROP TABLE IF EXISTS unknown_table')})"
exec admin "lua dump({c:execute('SELECT * FROM (VALUES (1,2), (2,3)) t')})"
exec admin "lua c:ping()"
exec admin "lua dump({c:select('SELECT * FROM (VALUES (1,2), (2,3)) t')})"
exec admin "lua dump({c:single('SELECT * FROM (VALUES (1,2), (2,3)) t')})"
exec admin "lua dump({c:single('SELECT * FROM (VALUES (1,2)) t')})"
exec admin "lua dump({c:perform('SELECT * FROM (VALUES (1,2), (2,3)) t')})"
exec admin "lua c:execute('SELEC T')"

exec admin "lua c = box.net.sql.connect('abcd')"

# mysql
exec admin "lua c = box.net.sql.connect('mysql', 'localhost', 3306, 'tarantool', 'tarantool', 'tarantool')"
exec admin "lua for k, v in pairs(c) do print(k, ': ', type(v)) end"
exec admin "lua c:execute('SEL ECT 1')"
exec admin "lua dump({c:execute('SELECT ? AS bool1, ? AS bool2, ? AS nil, ? AS num, ? AS str', true, false, nil, 123, 'abc')})"

exec admin "lua dump({c:execute('SELECT * FROM (SELECT ?) t WHERE 1 = 0', 2)})"
exec admin "lua dump({c:execute('CREATE PROCEDURE p1() BEGIN SELECT 1 AS One; SELECT 2 AS Two, 3 AS Three; END')})"
exec admin "lua dump({c:execute('CALL p1')})"
exec admin "lua dump({c:execute('DROP PROCEDURE p1')})"
exec admin "lua dump({c:execute('SELECT 1 AS one UNION ALL SELECT 2')})"
exec admin "lua dump({c:execute('SELECT 1 AS one UNION ALL SELECT 2; SELECT ? AS two', 'abc')})"

exec admin "lua c:quote('test \"abc\" test')"
