space = box.schema.create_space('tweedledum')
---
...
space:create_index('primary', { type = 'hash' })
---
...
----------------
-- # box.raise
----------------
1 + 1
---
- 2
...
box.raise(123, 'test')
---
- error: test
...
box.raise(0, 'the other test')
---
- error: 'box.raise(): unknown error code'
...
box.raise(12, 345)
---
- error: '345'
...
----------------
-- # box.stat
----------------
t = {}
---
...
--# setopt delimiter ';'
for k, v in pairs(box.stat()) do
    table.insert(t, k)
end;
---
...
for k, v in pairs(box.stat().DELETE) do
    table.insert(t, k)
end;
---
...
for k, v in pairs(box.stat.DELETE) do
    table.insert(t, k)
end;
---
...
t;
---
- - DELETE
  - SELECT
  - REPLACE
  - INSERT
  - CALL
  - UPDATE
  - total
  - rps
  - total
  - rps
...
----------------
-- # box.space
----------------
type(box);
---
- table
...
type(box.space);
---
- table
...
t = {};
---
...
for i, v in pairs(space.index[0].key_field[0]) do
    table.insert(t, tostring(i)..' : '..tostring(v))
end;
---
...
t;
---
- - 'type : NUM'
  - 'fieldno : 0'
...
----------------
-- # box.space
----------------
string.match(tostring(box.slab.info()), '^table:') ~= nil;
---
- true
...
box.slab.info().arena_used >= 0;
---
- true
...
box.slab.info().arena_size > 0;
---
- true
...
string.match(tostring(box.slab.info().slabs), '^table:') ~= nil;
---
- true
...
t = {};
---
...
for k, v in pairs(box.slab.info()) do
    table.insert(t, k)
end;
---
...
t;
---
- - slabs
  - arena_size
  - arena_used
...
----------------
-- # box.error
----------------
t = {}
for k,v in pairs(box.error) do
   table.insert(t, 'box.error.'..tostring(k)..' : '..tostring(v))
end;
---
...
t;
---
- - 'box.error.ER_NO_SUCH_INDEX : 35'
  - 'box.error.ER_TUPLE_FOUND : 3'
  - 'box.error.ER_CREATE_SPACE : 9'
  - 'box.error.ER_TUPLE_FORMAT_LIMIT : 16'
  - 'box.error.ER_FIELD_TYPE : 23'
  - 'box.error.ER_OK : 0'
  - 'box.error.ER_TUPLE_NOT_FOUND : 4'
  - 'box.error.ER_INDEX_ARITY : 39'
  - 'box.error.ER_WAL_IO : 40'
  - 'box.error.ER_INJECTION : 8'
  - 'box.error.ER_DROP_PRIMARY_KEY : 17'
  - 'box.error.ER_INDEX_TYPE : 13'
  - 'box.error.ER_ARG_TYPE : 26'
  - 'box.error.ER_INVALID_MSGPACK : 20'
  - 'box.error.ER_KEY_PART_COUNT : 31'
  - 'box.error.ER_MEMORY_ISSUE : 2'
  - 'box.error.ER_ILLEGAL_PARAMS : 1'
  - 'box.error.ER_KEY_FIELD_TYPE : 18'
  - 'box.error.ER_NONMASTER : 6'
  - 'box.error.ER_FIELD_TYPE_MISMATCH : 24'
  - 'box.error.ER_MODIFY_INDEX : 14'
  - 'box.error.ER_EXACT_MATCH : 19'
  - 'box.error.ER_SECONDARY : 7'
  - 'box.error.ER_UPDATE_FIELD : 29'
  - 'box.error.ER_FIBER_STACK : 30'
  - 'box.error.ER_UNKNOWN_UPDATE_OP : 28'
  - 'box.error.ER_SPACE_ARITY : 38'
  - 'box.error.ER_UNSUPPORTED : 5'
  - 'box.error.ER_NO_SUCH_FIELD : 37'
  - 'box.error.ER_TUPLE_NOT_ARRAY : 22'
  - 'box.error.ER_NO_SUCH_SPACE : 36'
  - 'box.error.ER_LAST_DROP : 15'
  - 'box.error.ER_ALTER_SPACE : 12'
  - 'box.error.ER_NO_SUCH_PROC : 33'
  - 'box.error.ER_SPACE_EXISTS : 10'
  - 'box.error.ER_PROC_LUA : 32'
  - 'box.error.ER_PROC_RET : 21'
  - 'box.error.ER_NO_SUCH_TRIGGER : 34'
  - 'box.error.ER_TUPLE_IS_TOO_LONG : 27'
  - 'box.error.ER_SPLICE : 25'
  - 'box.error.ER_DROP_SPACE : 11'
...
space:drop();
---
...
--# setopt delimiter ''
-- A test case for gh-37: print of 64-bit number
1, 1
---
- 1
- 1
...
tonumber64(1), 1
---
- 1
- 1
...
