# encoding: utf-8

admin("lua c = box.net.sql.connect('abcd')")
admin("lua dump = function(v) return box.cjson.encode(v) end")

admin("lua connect = {}")
admin("lua for tk in string.gmatch(os.getenv('MYSQL'), '[^:]+') do table.insert(connect, tk) end")

# mysql
admin("lua c = box.net.sql.connect('mysql', unpack(connect))")
admin("lua for k, v in pairs(c) do print(k, ': ', type(v)) end")
admin("lua c:execute('SEL ECT 1')")
admin("lua dump({c:execute('SELECT ? AS bool1, ? AS bool2, ? AS nil, ? AS num, ? AS str', true, false, nil, 123, 'abc')})")

admin("lua dump({c:execute('SELECT * FROM (SELECT ?) t WHERE 1 = 0', 2)})")
admin("lua dump({c:execute('CREATE PROCEDURE p1() BEGIN SELECT 1 AS One; SELECT 2 AS Two, 3 AS Three; END')})")
admin("lua dump({c:execute('CALL p1')})")
admin("lua dump({c:execute('DROP PROCEDURE p1')})")
admin("lua dump({c:execute('SELECT 1 AS one UNION ALL SELECT 2')})")
admin("lua dump({c:execute('SELECT 1 AS one UNION ALL SELECT 2; SELECT ? AS two', 'abc')})")

admin("lua c:quote('test \"abc\" test')")

admin("lua c:begin_work()")
admin("lua c:rollback()")
admin("lua c:begin_work()")
admin("lua c:commit()")

