test_run = require('test_run').new()
---
...
-- Since we store LSNs in data files, the data size may differ
-- from run to run. Deploy a new server to make sure it will be
-- the same so that we can check it.
test_run:cmd('create server test with script = "vinyl/stat.lua"')
---
- true
...
test_run:cmd('start server test')
---
- true
...
test_run:cmd('switch test')
---
- true
...
-- Compressed data size depends on the zstd version so let's
-- filter it out.
test_run:cmd("push filter 'bytes_compressed: .*' to 'bytes_compressed: <bytes_compressed>'")
---
- true
...
fiber = require('fiber')
---
...
errinj = box.error.injection
---
...
--
-- Check disk.compact.queue stat.
--
s = box.schema.space.create('test', {engine = 'vinyl'})
---
...
i = s:create_index('pk', {run_count_per_level = 2})
---
...
function dump() for i = 1, 10 do s:replace{i} end box.snapshot() end
---
...
dump()
---
...
i:stat().disk.compact.queue -- none
---
- bytes_compressed: <bytes_compressed>
  pages: 0
  rows: 0
  bytes: 0
...
i:stat().disk.compact.queue.bytes == box.stat.vinyl().disk.compact.queue
---
- true
...
errinj.set('ERRINJ_VY_COMPACTION_DELAY', true)
---
- ok
...
dump()
---
...
dump()
---
...
i:stat().disk.compact.queue -- 30 statements
---
- bytes_compressed: <bytes_compressed>
  pages: 3
  rows: 30
  bytes: 411
...
i:stat().disk.compact.queue.bytes == box.stat.vinyl().disk.compact.queue
---
- true
...
dump()
---
...
i:stat().disk.compact.queue -- 40 statements
---
- bytes_compressed: <bytes_compressed>
  pages: 4
  rows: 40
  bytes: 548
...
i:stat().disk.compact.queue.bytes == box.stat.vinyl().disk.compact.queue
---
- true
...
dump()
---
...
i:stat().disk.compact.queue -- 50 statements
---
- bytes_compressed: <bytes_compressed>
  pages: 5
  rows: 50
  bytes: 685
...
i:stat().disk.compact.queue.bytes == box.stat.vinyl().disk.compact.queue
---
- true
...
box.stat.reset() -- doesn't affect queue size
---
...
i:stat().disk.compact.queue -- 50 statements
---
- bytes_compressed: <bytes_compressed>
  pages: 5
  rows: 50
  bytes: 685
...
i:stat().disk.compact.queue.bytes == box.stat.vinyl().disk.compact.queue
---
- true
...
errinj.set('ERRINJ_VY_COMPACTION_DELAY', false)
---
- ok
...
while i:stat().disk.compact.count < 2 do fiber.sleep(0.01) end
---
...
i:stat().disk.compact.queue -- none
---
- bytes_compressed: <bytes_compressed>
  pages: 0
  rows: 0
  bytes: 0
...
s:drop()
---
...
test_run:cmd("clear filter")
---
- true
...
test_run:cmd('switch default')
---
- true
...
test_run:cmd('stop server test')
---
- true
...
test_run:cmd('cleanup server test')
---
- true
...
