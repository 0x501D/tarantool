file(GLOB all_sources *.c *.m *.mm)
set_source_files_compile_flags(${all_sources})

add_executable(rlist.test rlist.c test.c)
add_executable(queue.test queue.c)
add_executable(mhash.test mhash.c)
add_executable(rope_basic.test rope_basic.c ${CMAKE_SOURCE_DIR}/src/rope.c)
add_executable(rope_avl.test rope_avl.c ${CMAKE_SOURCE_DIR}/src/rope.c)
add_executable(rope_stress.test rope_stress.c ${CMAKE_SOURCE_DIR}/src/rope.c)
add_executable(rope.test rope.c ${CMAKE_SOURCE_DIR}/src/rope.c)
add_executable(bit.test bit.c bit.c)
target_link_libraries(bit.test bit)
add_executable(bitset_basic.test bitset_basic.c)
target_link_libraries(bitset_basic.test bitset)
add_executable(bitset_iterator.test bitset_iterator.c)
target_link_libraries(bitset_iterator.test bitset)
add_executable(bitset_index.test bitset_index.c)
target_link_libraries(bitset_index.test bitset)

add_executable(objc_finally.test objc_finally.m)
include_directories(${LIBOBJC_INCLUDE_DIR})
add_executable(objc_catchcxx.test objc_catchcxx.m)

add_dependencies(objc_finally.test build_bundled_libs)
add_dependencies(objc_catchcxx.test build_bundled_libs)

target_link_libraries(objc_finally.test ${LIBOBJC_LIBRARIES} -lm -pthread)
target_link_libraries(objc_catchcxx.test ${LIBOBJC_LIBRARIES} ${LUAJIT_LIB} -lm -pthread)
if (TARGET_OS_LINUX OR TARGET_OS_DEBIAN_FREEBSD)
    target_link_libraries(objc_catchcxx.test dl)
endif()

add_executable(base64.test base64.c ${CMAKE_SOURCE_DIR}/third_party/base64.c)
