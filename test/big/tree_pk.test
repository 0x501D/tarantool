# encoding: utf-8
#
# integer keys
sql("insert into t2 values (1, 'tuple')", silent=False)
admin("save snapshot", silent=False)
sql("insert into t2 values (2, 'tuple 2')", silent=False)
admin("save snapshot", silent=False)

sql("insert into t2 values (3, 'tuple 3')", silent=False)
sql("select * from t2 where k0 = 1", silent=False)
sql("select * from t2 where k0 = 2", silent=False)
sql("select * from t2 where k0 = 3", silent=False)

# Cleanup
sql("delete from t2 where k0 = 1", silent=False)
sql("delete from t2 where k0 = 2", silent=False)
sql("delete from t2 where k0 = 3", silent=False)

# Test incorrect keys - supplied key field type does not match index type
# https://bugs.launchpad.net/tarantool/+bug/1072624
sql("insert into t2 VALUES('xxxxxxx')", silent=False)
sql("insert into t2 VALUES('')", silent=False)
sql("insert into t2 VALUES('12')", silent=False)

# string keys
sql("insert into t3 values ('identifier', 'tuple')", silent=False)
admin("save snapshot", silent=False)
sql("insert into t3 values ('second', 'tuple 2')", silent=False)
admin("save snapshot", silent=False)
sql("call box.select_range('3', '0', '100', 'second')", silent=False)
sql("call box.select_range('3', '0', '100', 'identifier')", silent=False)

sql("insert into t3 values ('third', 'tuple 3')", silent=False)
sql("select * from t3 where k0 = 'identifier'", silent=False)
sql("select * from t3 where k0 = 'second'", silent=False)
sql("select * from t3 where k0 = 'third'", silent=False)

# Cleanup
sql("delete from t3 where k0 = 'identifier'", silent=False)
sql("delete from t3 where k0 = 'second'", silent=False)
sql("delete from t3 where k0 = 'third'", silent=False)
lua = """
function box.crossjoin(space0, space1, limit)
  space0 = tonumber(space0)
  space1 = tonumber(space1)
  limit = tonumber(limit)
  local result = {}
  for k0, v0 in box.space[space0]:pairs() do
    for k1, v1 in box.space[space1]:pairs() do
      if limit <= 0 then
        return unpack(result)
      end
      newtuple = {v0:unpack()}
      for _, v in v1:pairs() do table.insert(newtuple, v) end
      table.insert(result, newtuple)
      limit = limit - 1
    end
  end
  return unpack(result)
end"""
sql("insert into t2 values (1, 'tuple')", silent=False)
sql("insert into t3 values (1, 'tuple')", silent=False)
sql("insert into t3 values (2, 'tuple')", silent=False)
admin("lua "+ lua.replace('\n', ' '), silent=False) 
sql("call box.crossjoin('3', '3', '0')", silent=False)
sql("call box.crossjoin('3', '3', '5')", silent=False)
sql("call box.crossjoin('3', '3', '10000')", silent=False)
sql("call box.crossjoin('3', '2', '10000')", silent=False)
admin("lua box.space[3]:truncate()", silent=False)

# Bug #922520 - select missing keys
sql("insert into t2 values (200, 'select me!')", silent=False)
sql("select * from t2 where k0 = 200", silent=False)
sql("select * from t2 where k0 = 199", silent=False)
sql("select * from t2 where k0 = 201", silent=False)

# Test partially specified keys in TREE indexes
sql("insert into t15 values ('abcd')", silent=False)
sql("insert into t15 values ('abcda')", silent=False)
sql("insert into t15 values ('abcda_')", silent=False)
sql("insert into t15 values ('abcdb')", silent=False)
sql("insert into t15 values ('abcdb_')", silent=False)
sql("insert into t15 values ('abcdb__')", silent=False)
sql("insert into t15 values ('abcdb___')", silent=False)
sql("insert into t15 values ('abcdc')", silent=False)
sql("insert into t15 values ('abcdc_')", silent=False)
admin("lua box.space[15].index[0]:select_range(3, 'abcdb')", silent=False)
admin("lua box.space[15]:truncate()", silent=False)

#
# tree::replace tests
#

admin("lua box.space[22]:truncate()", silent=False)

sql("insert into t22 values (0, 0, 0, 0)", silent=False)
sql("insert into t22 values (1, 1, 1, 1)", silent=False)
sql("insert into t22 values (2, 2, 2, 2)", silent=False)

# OK
sql("replace into t22 values (1, 1, 1, 1)", silent=False)
sql("replace into t22 values (1, 10, 10, 10)", silent=False)
sql("replace into t22 values (1, 1, 1, 1)", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)
sql("select * from t22 WHERE k0 = 1", silent=False)
sql("select * from t22 WHERE k1 = 1", silent=False)
sql("select * from t22 WHERE k2 = 1", silent=False)
sql("select * from t22 WHERE k3 = 1", silent=False)

# OK
sql("insert into t22 values (10, 10, 10, 10)", silent=False)
sql("delete from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)


# TupleFound (primary key)
sql("insert into t22 values (1, 10, 10, 10)", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)
sql("select * from t22 WHERE k0 = 1", silent=False)

# TupleNotFound (primary key)
sql("replace into t22 values (10, 10, 10, 10)", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)

# TupleFound (key #1)
sql("insert into t22 values (10, 0, 10, 10)", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)
sql("select * from t22 WHERE k1 = 0", silent=False)

# TupleFound (key #1)
sql("replace into t22 values (2, 0, 10, 10)", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)
sql("select * from t22 WHERE k1 = 0", silent=False)

# TupleFound (key #3)
sql("insert into t22 values (10, 10, 10, 0)", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)
sql("select * from t22 WHERE k3 = 0", silent=False)

# TupleFound (key #3)
sql("replace into t22 values (2, 10, 10, 0)", silent=False)
sql("select * from t22 WHERE k0 = 10", silent=False)
sql("select * from t22 WHERE k1 = 10", silent=False)
sql("select * from t22 WHERE k2 = 10", silent=False)
sql("select * from t22 WHERE k3 = 10", silent=False)
sql("select * from t22 WHERE k3 = 0", silent=False)

sql.sort = True
# Non-Uniq test (key #2)
sql("insert into t22 values (4, 4, 0, 4)", silent=False)
sql("insert into t22 values (5, 5, 0, 5)", silent=False)
sql("insert into t22 values (6, 6, 0, 6)", silent=False)
sql("replace into t22 values (5, 5, 0, 5)", silent=False)
sql("select * from t22 WHERE k2 = 0", silent=False)
sql("delete from t22 WHERE k0 = 5", silent=False)
sql("select * from t22 WHERE k2 = 0", silent=False)
sql.sort = False

admin("lua box.space[22]:truncate()", silent=False)

