# encoding: utf-8
#

# insert rows
sql("insert into t27 values (0, 'foo', 0, '', 1)", silent=False)
sql("insert into t27 values (0, 'foo', 1, '', 1)", silent=False)
sql("insert into t27 values (1, 'foo', 0, '', 2)", silent=False)
sql("insert into t27 values (1, 'foo', 1, '', 2)", silent=False)
sql("insert into t27 values (0, 'bar', 0, '', 3)", silent=False)
sql("insert into t27 values (0, 'bar', 1, '', 3)", silent=False)
sql("insert into t27 values (1, 'bar', 0, '', 4)", silent=False)
sql("insert into t27 values (1, 'bar', 1, '', 4)", silent=False)
# try to insert a row with a duplicate key
sql("insert into t27 values (1, 'bar', 1, '', 5)", silent=False)

# output all rows
lua_code = """
function box.select_all(space)
    space = tonumber(space)
    local result = {}
        for k, v in box.space[space]:pairs() do
            table.insert(result, v)
    end
    return unpack(result)
end
"""
admin("lua " + lua_code.replace('\n', ' '), silent=False)
sql.sort = True
sql("call box.select_all('27')", silent=False)
sql.sort = False

# primary index select
admin("lua box.select(27, 0, 1, 'foo', 0)", silent=False)
admin("lua box.select(27, 0, 1, 'bar', 0)", silent=False)
# primary index slect with missing part
admin("lua box.select(27, 0, 1, 'foo')", silent=False)
# primary index slect with extra part
admin("lua box.select(27, 0, 1, 'foo', 0, 0)", silent=False)
# primary index select with wrong type
admin("lua box.select(27, 0, 1, 'foo', 'baz')", silent=False)

# secondary index select
admin("lua box.select(27, 1, 1, 4)", silent=False)
# secondary index select with no such key
admin("lua box.select(27, 1, 1, 5)", silent=False)
# secondary index select with missing part
admin("lua box.select(27, 1, 1)", silent=False)
# secondary index select with wrong type
admin("lua box.select(27, 1, 1, 'baz')", silent=False)

# cleanup
admin("lua box.space[27]:truncate()", silent=False)
admin("lua box.space[27]:len()", silent=False)
