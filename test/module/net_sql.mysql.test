# encoding: tarantool
import os
import shutil
import sys

module_path = os.path.join(vardir, "box/net")
module_path_so = module_path + "/mysql.so"
try:
    os.makedirs(module_path)
except OSError:
    pass

shutil.copy(os.path.join(self.args.builddir, "src/module/mysql/mysql.so"), module_path_so)

server.stop()
server.deploy(init_lua="module/net_sql.mysql.lua")

sys.stdout.push_filter("error: .*/src/module/sql/sql.lua", "error: src/module/sql/sql.lua")

exec admin "lua c = box.net.sql.connect('abcd')"
exec admin "lua c = box.net.sql.connect('mysql')"
exec admin "lua dump = function(v) return box.cjson.encode(v) end"

exec admin "lua connect = {}"
exec admin "lua for tk in string.gmatch(os.getenv('MYSQL')..':', '(.-):') do table.insert(connect, tk) end"

# mysql
exec admin "lua c = box.net.sql.connect('mysql', unpack(connect))"
exec admin "lua for k, v in pairs(c) do print(k, ': ', type(v)) end"
exec admin "lua c:execute('SEL ECT 1')"
exec admin "lua dump({c:execute('SELECT ? AS bool1, ? AS bool2, ? AS nil, ? AS num, ? AS str', true, false, nil, 123, 'abc')})"

exec admin "lua dump({c:execute('SELECT * FROM (SELECT ?) t WHERE 1 = 0', 2)})"
exec admin "lua dump({c:execute('CREATE PROCEDURE p1() BEGIN SELECT 1 AS One; SELECT 2 AS Two, 3 AS Three; END')})"
exec admin "lua dump({c:execute('CALL p1')})"
exec admin "lua dump({c:execute('DROP PROCEDURE p1')})"
exec admin "lua dump({c:execute('SELECT 1 AS one UNION ALL SELECT 2')})"
exec admin "lua dump({c:execute('SELECT 1 AS one UNION ALL SELECT 2; SELECT ? AS two', 'abc')})"
# https://github.com/tarantool/mysql/pull/1
exec admin "lua dump({c:execute('SELECT ? AS val', '1')})"
exec admin "lua dump({c:execute('SELECT ? AS val', 1)})"

exec admin "lua c:quote('test \"abc\" test')"

exec admin "lua c:begin_work()"
exec admin "lua c:rollback()"
exec admin "lua c:begin_work()"
exec admin "lua c:commit()"

os.unlink(module_path_so)
os.removedirs(module_path)

sys.stdout.clear_all_filters()

