# encoding: tarantool
import os
import shutil

module_path = os.path.join(vardir, "box")
module_path_so = module_path + "/sophia.so"
os.makedirs(module_path)
shutil.copy("../src/module/sophia/sophia.so", module_path_so)

server.stop()
server.deploy(init_lua="module/sophia.lua")

exec admin "lua env = box.sophia.create()"
exec admin "lua flags = bit.bor(box.sophia.SPO_RDWR, box.sophia.SPO_CREAT)"
exec admin "lua env:ctl(box.sophia.SPDIR, flags, \"./sophia\")"
exec admin "lua env:open()"
exec admin "lua for key=1, 10 do print(env:set(tostring(key), tostring(key))) end"
exec admin "lua for key=1, 10 do print(env:get(tostring(key))) end"
exec admin "lua env:close()"

exec admin "lua env = box.sophia.create()"
exec admin "lua flags = bit.bor(box.sophia.SPO_RDWR)"
exec admin "lua env:ctl(box.sophia.SPDIR, flags, \"./sophia\")"
exec admin "lua env:open()"
exec admin "lua for key=1, 10 do print(env:get(tostring(key))) end"
exec admin "lua for key=1, 10 do print(env:delete(tostring(key))) end"
exec admin "lua for key=1, 10 do print(env:get(tostring(key))) end"
exec admin "lua env:close()"

sophia_repository = os.path.join(vardir, "sophia")
shutil.rmtree(sophia_repository)

os.unlink(module_path_so)
os.removedirs(module_path)
