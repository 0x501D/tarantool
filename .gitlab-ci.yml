stages:
  - bootstrap
  - test
  - cleanup

variables:
  GITLAB_MAKE: "make -f .gitlab.mk"
  IMAGE_PERF: "${CI_REGISTRY}/${CI_PROJECT_PATH}/perf/ubuntu-bionic:perf_master"
  IMAGE_PERF_BUILT: "${CI_REGISTRY}/${CI_PROJECT_PATH}/perf_tmp/ubuntu-bionic:perf_${CI_COMMIT_SHORT_SHA}"

# Jobs templates

.release_only_template: &release_only_definition
  only:
    refs:
      - master
      - /^.*-full-ci$/

.docker_test_template: &docker_test_definition
  image: "${CI_REGISTRY}/${CI_PROJECT_PATH}/testing/debian-stretch:latest"
  stage: test
  tags:
    - docker_test

.docker_test_clang8_template: &docker_test_clang8_definition
  image: "${CI_REGISTRY}/${CI_PROJECT_PATH}/testing/debian-buster:latest"
  stage: test
  tags:
    - docker_test

.deploy_template: &deploy_definition
  <<: *release_only_definition
  stage: test
  tags:
    - deploy
  script:
    - ${GITLAB_MAKE} package

.deploy_test_template: &deploy_test_definition
  <<: *release_only_definition
  stage: test
  tags:
    - deploy_test
  script:
    - ${GITLAB_MAKE} package

.vbox_template: &vbox_definition
  stage: test
  before_script:
    - ${GITLAB_MAKE} vms_start
  after_script:
    - ${GITLAB_MAKE} vms_shutdown

perf_bootstrap:
  only:
    refs:
      - master
      - /^.*-perf$/
  stage: bootstrap
  tags:
    - perf
  script:
    - ${GITLAB_MAKE} docker_perf_bootstrap

perf_linkbench:
  only:
    refs:
      - master
      - /^.*-perf$/
  image: ${IMAGE_PERF_BUILT}
  stage: test
  tags:
    - docker_perf_hdd
  script:
    - ${GITLAB_MAKE} perf_linkbench

perf_linkbench_ssd:
  only:
    refs:
      - master
      - /^.*-perf$/
  image: ${IMAGE_PERF_BUILT}
  stage: test
  tags:
    - docker_perf_ssd
  script:
    - ${GITLAB_MAKE} perf_linkbench

remove_images:
  only:
    refs:
      - master
      - /^.*-perf$/
  stage: cleanup
  when: always
  tags:
    - perf
  script:
    - ${GITLAB_MAKE} docker_perf_tmp_image_remove
