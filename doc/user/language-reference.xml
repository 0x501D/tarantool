<!DOCTYPE book [
<!ENTITY % tnt SYSTEM "../tnt.ent">
%tnt;
]>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xml:id="language-reference">

<title>Language reference</title>
<blockquote><para>
  This chapter provides a reference of Tarantool data operations
  and administrative commands.
</para></blockquote>
<bridgehead renderas="sect2">Digression: data and administrative ports</bridgehead>
<para>
  Unlike many other key/value servers, Tarantool uses
  different TCP ports and client/server protocols for data
  manipulation and administrative statements.
  On start up, the server connects to three TCP ports:
  <itemizedlist>
    <listitem><para>
      Read/write data port, to handle INSERTs, UPDATEs,
      DELETEs and SELECTs.
      </para>
      <para>
      The default value of the port is <literal>33013</literal>,
      as defined in <emphasis>primary_port</emphasis>
      configuration option.
    </para></listitem>
    <listitem><para>
      Read only port, which only accepts SELECTs, port number
      <literal>33014</literal>, as defined in
      <emphasis>secondary_port</emphasis> configuration option.
    </para></listitem>
    <listitem><para>
      Administrative port, which defaults to <literal>33015</literal>,
      and is defined in <emphasis>admin_port</emphasis>
      configuration option.
    </para></listitem>
  </itemizedlist>
  
  The data protocol is binary; a complete description is
  provided in doc/box-protocol.txt. 

</para>
<para>
  separation of ports is done in part to allow system
  administrators to secure the read/write port or the
  administrative port. The values of read-only, read-write and
  administrative ports can be specified in the configuration file.
</para>
<para>
  How command line client understands what port to use.
</para>

<!--
<section>

  <title>Data console</title>

  <para>The default data port is 33014. It can be set in the 
  configuration file. Data console supports asynchronous I/O.
  Four commands are supported. For a complete protocol manual, see
  developers guide.
  </para>

</section>


-->
<section>
  <title>Administrative console</title>
  <para>
    The administrative console uses a simple text protocol, so you
    can connect to it using any <command>telnet</command> client,
    or a tool like <command>rlwrap</command>, if access to
    readline features is desired. Additionally, Tarantool features
    its own Python-based client, located in directory <filename>test</filename>, <command>tarantool</command>.
    Tarantool replies to administrative command in YAML.
  </para>

  <para><emphasis xml:id="reload-configuration" xreflabel="RELOAD CONFIGURATION" role="tntadmin">reload
  configuration</emphasis> Re-read the configuration file. If the
  file contains changes to dynamic parameters, update the runtime
  settings. If configuration syntax is incorrect, or a read-only parameter is    changed, produce an error and do nothing.</para>
  <para><emphasis xml:id="show-configuration" xreflabel="SHOW CONFIGURATION" role="tntadmin">show
  configuration</emphasis> Show the current settings. Displays all
  settings, including those that have default values and thus are
  not necessarily present in the configuration file.</para>
</section>
</chapter>

<!--
vim: tw=66 syntax=docbk
vim: spell spelllang=en_us
-->
