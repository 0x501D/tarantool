-------------------------------------------------------------------------------
                                   Package `log`
-------------------------------------------------------------------------------

.. module:: log

The Tarantool server puts all diagnostic messages in a log file specified by
the :confval:`logger` configuration parameter. Diagnostic messages may be either
system-generated by the server's internal code, or user-generated with the
``log.log_level_function_name`` function.

.. function:: error(message)
              warn(message)
              info(message)
              debug(message)

    Output a user-generated message to the :ref:`log file <logger>`, given
    log_level_function_name = ``error`` or ``warn`` or ``info`` or ``debug``.

    :param string message: The actual output will be a line containing the
                           current timestamp, a module name, 'E' or 'W' or
                           'I' or 'D' or 'R' depending on
                           ``log_level_function_name``, and ``message``.
                           Output will not occur if ``log_level_function_name``
                           is for a type greater than :ref:`log_level <logger>`.
                           Messages may contain C-style format specifiers
                           %d or %s, so :samp:`log.error('...%d...%s',{x},{y})`
                           will work if x is a number and y is a string.
    :return: nil

.. function:: logger_pid()

.. function:: rotate()

=================================================
                     Example
=================================================

    | :codebold:`#From the shell:`
    | :codebold:`#Start the server, do some requests, exit, and display the log, thus:`
    | :codenormal:`$` :codebold:`~/tarantool/src/tarantool`
    | :codenormal:`tarantool>` :codebold:`box.cfg{log_level=3, logger='tarantool.txt'}`
    | :codenormal:`tarantool>` :codebold:`log = require('log')`
    | :codenormal:`tarantool>` :codebold:`log.error('Error')`
    | :codenormal:`tarantool>` :codebold:`log.info('Info %s', box.info.version)`
    | :codenormal:`tarantool>` :codebold:`os.exit()`
    | :codenormal:`$` :codebold:`less tarantool.txt`

The output from the less command will look approximately like this:

    | :codenormal:`2...0 [5257] main/101/interactive C> version 1.6.3-355-ga4f762d`
    | :codenormal:`2...1 [5257] main/101/interactive C> log level 3`
    | :codenormal:`2...1 [5261] main/101/spawner C> initialized`
    | :codenormal:`2...0 [5257] main/101/interactive [C]:-1 E> Error`

The 'Error' line is visible in tarantool.txt preceded by the letter E.
The 'Info' line is not present because the log_level is 3.
