# username to switch to
username=NULL, ro

# Local hot standby (if enabled, the server will run in hot
# standby mode, continuously fetching WAL records from wal_dir,
# until it is able to bind to the primary port.
# In local hot standby mode the server only accepts reads.
local_hot_standby=false, ro

# tarantool bind ip address, applies to primary port.
# INADDR_ANY is the default value.
bind_ipaddr="INADDR_ANY", ro

# save core on abort/assert
# deprecated; use ulimit instead
coredump=false, ro

# admin port
# used for admin's connections
admin_port=0, ro

# Log verbosity, possible values: SYS_ERROR = 1, ERROR=2, CRIT=3, WARN=4, INFO=5(default), DEBUG=6
log_level=5

# Size of slab arena in GB
slab_alloc_arena=1.0, ro
# Size of minimal allocation unit
slab_alloc_minimal=64, ro
# Growth factor, each subsequent unit size is factor * prev unit size
slab_alloc_factor=2.0, ro

# working directory (daemon will chdir(2) to it)
work_dir=NULL, ro

# Snapshot directory (where snapshots get saved/read)
snap_dir=".", ro

# WAL directory (where WALs get saved/read)
wal_dir=".", ro

# name of pid file
pid_file="tarantool.pid", ro

# logger command will be executed via /bin/sh -c {}
# example: 'exec cronolog /var/log/tarantool/%Y-%m/%Y-%m-%d/tarantool.log'
# example: 'exec extra/logger.pl /var/log/tarantool/tarantool.log'
# when logger is not configured all logging going to STDERR
logger=NULL, ro

# make logging nonblocking, this potentially can lose some logging data
logger_nonblock=true, ro

# delay between loop iterations
io_collect_interval=0.0

# network io readahead
readahead=16320

# Do not write into snapshot faster than snap_io_rate_limit MB/sec
snap_io_rate_limit=0.0

# Write no more rows in WAL
rows_per_wal=500000, ro

# Defines fiber/data synchronization fsync(2) policy:
#   "none":           does not write to WAL
#   "write":          fibers wait for their data to be written to the log.
#   "fsync":          fibers wait for their data, fsync(2) follows each write(2)
#   "fsync_delay":    fibers wait for their data, fsync every N=wal_fsync_delay seconds,
#                     N=0.0 means no fsync (equivalent to wal_mode = "write");
wal_mode="fsync_delay"

# Fsync WAL delay, only issue fsync if last fsync was wal_fsync_delay
# seconds ago.
# WARNING: actually, several last requests may stall fsync for much longer
wal_fsync_delay=0.0

# Delay, in seconds, between successive re-readings of wal_dir.
# The re-scan is necessary to discover new WAL files or snapshots.
wal_dir_rescan_delay=0.1, ro

# Panic if there is an error reading a snapshot or WAL.
# By default, panic on any snapshot reading error and ignore errors
# when reading WALs.
panic_on_snap_error=true, ro
panic_on_wal_error=false, ro
## BOX

# Primary port (where updates are accepted)
primary_port=0, ro

# Warn about requests which take longer to process, in seconds.
too_long_threshold=0.5

# A custom process list (ps) title string, appended after the standard
# program title.
custom_proc_title=NULL, ro

# Replication mode (if enabled, the server, once
# bound to the primary port, will connect to
# replication_source (ipaddr:port) and run continously
# fetching records from it.. In replication mode the server
# only accepts reads.
replication_source=NULL
